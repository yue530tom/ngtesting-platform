<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ngtesting.platform.dao.ProjectDao">

    <select id="query" resultMap="projectMaps">
        SELECT #{keywordsParam} as "keywordsParam", #{disabledParam} as "disabledParam", p.*
        FROM "TstProject" p
        WHERE p."orgId" = #{orgId}
          AND p."type" = 'group'
          AND NOT p.deleted
        ORDER BY p.id
    </select>
    <select id="getChildren" parameterType="Map" resultType="TstProject">
        SELECT c.* FROM "TstProject" c
        WHERE c."parentId" = #{id} AND c."type"='project'
        <if test="keywordsParam != null and keywordsParam != ''">
            AND c.name LIKE '%${keywordsParam}%'
        </if>
        <if test="disabledParam != null">
            AND c.disabled = ${disabledParam}
        </if>
        AND NOT c.deleted
        ORDER BY c.id
    </select>

    <select id="queryIdAndName" resultType="Map">
        SELECT p.id, p.name
        FROM "TstProject" p
        WHERE p."orgId" = #{orgId}
          AND p."type" = 'project'
          AND NOT p.deleted
          AND NOT p.disabled
        ORDER BY p.id
    </select>

    <select id="get" parameterType="Integer" resultType="TstProject">
        SELECT *
        FROM "TstProject" prj
        WHERE prj.id = #{id}
    </select>
    <delete id="delete">
        UPDATE "TstProject"
        SET deleted      = TRUE,
            "updateTime" = NOW()
        WHERE id = #{id}
    </delete>

    <insert id="genHistory" statementType="CALLABLE">
        {call gen_project_access_history(
                #{orgId,mode=IN,jdbcType=INTEGER},
                #{prjId,mode=IN,jdbcType=INTEGER},
                #{prjName,mode=IN,jdbcType=VARCHAR},
                #{userId,mode=IN,jdbcType=INTEGER}
        )}
    </insert>

    <select id="listRecent" resultType="TstProjectAccessHistory">
        SELECT *
        FROM "TstProjectAccessHistory" his
                 JOIN "TstProject" prj on his."prjId" = prj.id
        WHERE his."orgId" = #{orgId}
          AND his."userId" = #{userId}
          AND NOT prj.deleted
          AND NOT prj.disabled
        ORDER BY his."lastAccessTime" DESC
    </select>

    <select id="isLastestProjectGroup" resultType="INTEGER">
        SELECT COUNT(*)
        FROM "TstProject" prj

        WHERE prj."orgId" = #{orgId}
          AND prj.id != #{projectGroupId}
          AND prj."type" = 'group'
          AND NOT prj.deleted
          AND NOT prj.disabled
    </select>

    <select id="listBrothers" resultType="TstProject">
        SELECT *
        FROM "TstProject" prj
                 JOIN "TstProject" temp ON temp."parentId" = prj."parentId"
        WHERE temp.id = #{id}
        and not prj.deleted and not prj.disabled
        ORDER BY prj.id
    </select>
    <select id="listBrotherIds" resultType="int">
        SELECT prj.id
        FROM "TstProject" prj
                 JOIN "TstProject" temp ON temp."parentId" = prj."parentId"
        WHERE temp.id = #{id}
        and NOT prj.deleted and not prj.disabled
        ORDER BY prj.id
    </select>

    <select id="listProjectGroups" resultType="TstProject">
        SELECT *
        FROM "TstProject" prj

        WHERE prj."orgId" = #{orgId} AND prj."type" = 'group'
          AND NOT prj.deleted

            <if test="groupId != null">
                AND (NOT prj.disabled OR prj.id = #{groupId})
            </if>
            <if test="groupId == null">
                AND NOT prj.disabled
            </if>
        ORDER BY prj.id
    </select>

    <select id="getProjectsByOrg" resultType="TstProject">
        SELECT *
        FROM "TstProject" prj

        WHERE prj."orgId" = #{orgId}
          AND prj."type" = 'project'
          AND NOT prj.deleted
          AND NOT prj.disabled
        ORDER BY prj.id
    </select>

    <select id="listProjectId" resultType="Integer">
        SELECT prj.id FROM "TstProject" prj

        WHERE TRUE
        <if test="type == 'org'">
            AND prj."orgId" = #{id}
        </if>
        <if test="type == 'group'">
            AND prj."parentId" = #{id}
        </if>
        <if test="type == 'project'">
            AND prj.id = #{id}
        </if>

        AND prj."type" = 'project'

        AND NOT prj.deleted
        AND NOT prj.disabled
        ORDER BY prj.id
    </select>

    <insert id="save" parameterType="TstProject" useGeneratedKeys="true" keyProperty="id">
        insert into "TstProject" (name,
                                  descr,
                                  "orgId",
                                  "parentId",
                                  "type",
                                  "issueTypeSolutionId",
                                  "issuePrioritySolutionId",
                                  "issuePageSolutionId",
                                  "issueWorkflowSolutionId",
                                  deleted,
                                  disabled,
                                  "createTime")

        values (#{name},
                #{descr},
                #{orgId},
                #{parentId},
                #{type},
                (select s.id
                 from "IsuTypeSolution" s
                 where s."orgId" = ${orgId}
                   AND s."defaultVal"),
                (select s.id
                 from "IsuPrioritySolution" s
                 where s."orgId" = ${orgId}
                   AND s."defaultVal"),
                (select s.id
                 from "IsuPageSolution" s
                 where s."orgId" = ${orgId}
                   AND s."defaultVal"),
                (select s.id
                 from "IsuWorkflowSolution" s
                 where s."orgId" = ${orgId}
                   AND s."defaultVal"),
                #{deleted},
                #{disabled},
                #{createTime})
    </insert>
    <update id="update" parameterType="TstProject">
        UPDATE "TstProject"
        SET name = #{name},
            descr = #{descr},
            "orgId" = #{orgId},
            "parentId" = #{parentId},
            disabled = #{disabled}
        WHERE id = #{id}
    </update>

    <update id="enable" parameterType="TstProject">
        UPDATE "TstProject"
        SET disabled = FALSE
        WHERE id = #{id}
    </update>
    <update id="enableChildren" parameterType="TstProject">
        UPDATE "TstProject"
        SET disabled = FALSE
        WHERE "parentId" = #{id}
    </update>
    <update id="disableChildren" parameterType="TstProject">
        UPDATE "TstProject"
        SET disabled = TRUE
        WHERE "parentId" = #{id}
    </update>

    <update id="setDefault">
        UPDATE "TstUser"
        SET "defaultPrjId" = #{prjId},
            "defaultPrjName" = #{prjName}
        WHERE id = #{id}
    </update>
    <update id="setUserDefaultPrjToNullForDelete">
        UPDATE "TstUser"
        SET "defaultPrjId"   = NULL,
            "defaultPrjName" = NULL
        WHERE "defaultPrjId" = #{prjId}
    </update>

    <resultMap id="projectMaps" type="com.ngtesting.platform.model.TstProject" autoMapping="true">
        <id column="id" property="id"/>

        <collection property="children" ofType="TstProject" select="getChildren"
                    column="{id=id,keywordsParam=keywordsParam,disabledParam=disabledParam">
        </collection>
    </resultMap>

</mapper>
